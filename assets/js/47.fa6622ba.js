(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{452:function(a,t,s){"use strict";s.r(t);var e=s(26),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes核心技术-controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes核心技术-controller"}},[a._v("#")]),a._v(" Kubernetes核心技术-Controller")]),a._v(" "),s("h2",{attrs:{id:"内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[a._v("#")]),a._v(" 内容")]),a._v(" "),s("ul",[s("li",[a._v("什么是Controller")]),a._v(" "),s("li",[a._v("Pod和Controller的关系")]),a._v(" "),s("li",[a._v("Deployment控制器应用场景")]),a._v(" "),s("li",[a._v("yaml文件字段说明")]),a._v(" "),s("li",[a._v("Deployment控制器部署应用")]),a._v(" "),s("li",[a._v("升级回滚")]),a._v(" "),s("li",[a._v("弹性伸缩")])]),a._v(" "),s("h2",{attrs:{id:"什么是controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是controller"}},[a._v("#")]),a._v(" 什么是Controller")]),a._v(" "),s("p",[a._v("Controller是在集群上管理和运行容器的对象，Controller是实际存在的，Pod是虚拟机的")]),a._v(" "),s("h2",{attrs:{id:"pod和controller的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod和controller的关系"}},[a._v("#")]),a._v(" Pod和Controller的关系")]),a._v(" "),s("p",[a._v("Pod是通过Controller实现应用的运维，比如弹性伸缩，滚动升级等")]),a._v(" "),s("p",[a._v("Pod 和 Controller之间是通过label标签来建立关系，同时Controller又被称为控制器工作负载")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116092431237.png",alt:"image-20201116092431237"}})]),a._v(" "),s("h2",{attrs:{id:"deployment控制器应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment控制器应用"}},[a._v("#")]),a._v(" Deployment控制器应用")]),a._v(" "),s("ul",[s("li",[a._v("Deployment控制器可以部署无状态应用")]),a._v(" "),s("li",[a._v("管理Pod和ReplicaSet")]),a._v(" "),s("li",[a._v("部署，滚动升级等功能")]),a._v(" "),s("li",[a._v("应用场景：web服务，微服务")])]),a._v(" "),s("p",[a._v("Deployment表示用户对K8S集群的一次更新操作。Deployment是一个比RS( Replica Set, RS) 应用模型更广的 API 对象，可以是创建一个新的服务，更新一个新的服务，也可以是滚动升级一个服务。滚动升级一个服务，实际是创建一个新的RS，然后逐渐将新 RS 中副本数增加到理想状态，将旧RS中的副本数减少到0的复合操作。")]),a._v(" "),s("p",[a._v("这样一个复合操作用一个RS是不好描述的，所以用一个更通用的Deployment来描述。以K8S的发展方向，未来对所有长期伺服型的业务的管理，都会通过Deployment来管理。")]),a._v(" "),s("h2",{attrs:{id:"deployment部署应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment部署应用"}},[a._v("#")]),a._v(" Deployment部署应用")]),a._v(" "),s("p",[a._v("之前我们也使用Deployment部署过应用，如下代码所示")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectrl create deployment web --image"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("nginx\n")])])]),s("p",[a._v("但是上述代码不是很好的进行复用，因为每次我们都需要重新输入代码，所以我们都是通过YAML进行配置")]),a._v(" "),s("p",[a._v("但是我们可以尝试使用上面的代码创建一个镜像【只是尝试，不会创建】")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl create deployment web --image"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("nginx --dry-run -o yaml "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" nginx.yaml\n")])])]),s("p",[a._v("然后输出一个yaml配置文件 "),s("code",[a._v("nginx.yml")]),a._v(" ，配置文件如下所示")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: web\n  name: web\nspec:\n  replicas: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  selector:\n    matchLabels:\n      app: web\n  strategy: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: web\n    spec:\n      containers:\n      - image: nginx\n        name: nginx\n        resources: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nstatus: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("我们看到的 selector 和 label 就是我们Pod 和 Controller之间建立关系的桥梁")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116093638951.png",alt:"image-20201116093638951"}})]),a._v(" "),s("h3",{attrs:{id:"使用yaml创建pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用yaml创建pod"}},[a._v("#")]),a._v(" 使用YAML创建Pod")]),a._v(" "),s("p",[a._v("通过刚刚的代码，我们已经生成了YAML文件，下面我们就可以使用该配置文件快速创建Pod镜像了")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply -f nginx.yaml\n")])])]),s("p",[s("img",{attrs:{src:"images/image-20201116094046007.png",alt:"image-20201116094046007"}})]),a._v(" "),s("p",[a._v("但是因为这个方式创建的，我们只能在集群内部进行访问，所以我们还需要对外暴露端口")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl expose deployment web --port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" --type"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NodePort --target-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("web1\n")])])]),s("p",[a._v("关于上述命令，有几个参数")]),a._v(" "),s("ul",[s("li",[a._v("--port：就是我们内部的端口号")]),a._v(" "),s("li",[a._v("--target-port：就是暴露外面访问的端口号")]),a._v(" "),s("li",[a._v("--name：名称")]),a._v(" "),s("li",[a._v("--type：类型")])]),a._v(" "),s("p",[a._v("同理，我们一样可以导出对应的配置文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl expose deployment web --port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" --type"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NodePort --target-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("web1 -o yaml "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" web1.yaml\n")])])]),s("p",[a._v("得到的web1.yaml如下所示")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2020-11-16T02:26:53Z"')]),a._v("\n  labels:\n    app: web\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:labels:\n          .: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          f:app: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      f:spec:\n        f:externalTrafficPolicy: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        f:ports:\n          .: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          k:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"port"')]),a._v(":80,"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"protocol"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TCP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(":\n            .: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            f:port: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            f:protocol: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            f:targetPort: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        f:selector:\n          .: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          f:app: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        f:sessionAffinity: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        f:type: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    manager: kubectl\n    operation: Update\n    time: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2020-11-16T02:26:53Z"')]),a._v("\n  name: web2\n  namespace: default\n  resourceVersion: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"113693"')]),a._v("\n  selfLink: /api/v1/namespaces/default/services/web2\n  uid: d570437d-a6b4-4456-8dfb-950f09534516\nspec:\n  clusterIP: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.104")]),a._v(".174.145\n  externalTrafficPolicy: Cluster\n  ports:\n  - nodePort: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("32639")]),a._v("\n    port: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n    protocol: TCP\n    targetPort: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n  selector:\n    app: web\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("然后我们可以通过下面的命令来查看对外暴露的服务")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl get pods,svc\n")])])]),s("p",[s("img",{attrs:{src:"images/image-20201116104021357.png",alt:"image-20201116104021357"}})]),a._v(" "),s("p",[a._v("然后我们访问对应的url，即可看到 nginx了 "),s("code",[a._v("http://192.168.177.130:32639/")])]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116104131968.png",alt:"image-20201116104131968"}})]),a._v(" "),s("h2",{attrs:{id:"升级回滚和弹性伸缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#升级回滚和弹性伸缩"}},[a._v("#")]),a._v(" 升级回滚和弹性伸缩")]),a._v(" "),s("ul",[s("li",[a._v("升级：  假设从版本为1.14 升级到 1.15 ，这就叫应用的升级【升级可以保证服务不中断】")]),a._v(" "),s("li",[a._v("回滚：从版本1.15 变成 1.14，这就叫应用的回滚")]),a._v(" "),s("li",[a._v("弹性伸缩：我们根据不同的业务场景，来改变Pod的数量对外提供服务，这就是弹性伸缩")])]),a._v(" "),s("h3",{attrs:{id:"应用升级和回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用升级和回滚"}},[a._v("#")]),a._v(" 应用升级和回滚")]),a._v(" "),s("p",[a._v("首先我们先创建一个 1.14版本的Pod")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: web\n  name: web\nspec:\n  replicas: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  selector:\n    matchLabels:\n      app: web\n  strategy: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: web\n    spec:\n      containers:\n      - image: nginx:1.14\n        name: nginx\n        resources: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nstatus: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("我们先指定版本为1.14，然后开始创建我们的Pod")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply -f nginx.yaml\n")])])]),s("p",[a._v("同时，我们使用docker images命令，就能看到我们成功拉取到了一个 1.14版本的镜像")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116105710966.png",alt:"image-20201116105710966"}})]),a._v(" "),s("p",[a._v("我们使用下面的命令，可以将nginx从 1.14 升级到 1.15")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" image deployment web "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("nginx")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("nginx:1.15\n")])])]),s("p",[a._v("在我们执行完命令后，能看到升级的过程")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116105847069.png",alt:"image-20201116105847069"}})]),a._v(" "),s("ul",[s("li",[a._v("首先是开始的nginx 1.14版本的Pod在运行，然后 1.15版本的在创建")]),a._v(" "),s("li",[a._v("然后在1.15版本创建完成后，就会暂停1.14版本")]),a._v(" "),s("li",[a._v("最后把1.14版本的Pod移除，完成我们的升级")])]),a._v(" "),s("p",[a._v("我们在下载 1.15版本，容器就处于ContainerCreating状态，然后下载完成后，就用 1.15版本去替换1.14版本了，这么做的好处就是：升级可以保证服务不中断")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116111614085.png",alt:"image-20201116111614085"}})]),a._v(" "),s("p",[a._v("我们到我们的node2节点上，查看我们的 docker images;")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201116111315000.png",alt:"image-20201116111315000"}})]),a._v(" "),s("p",[a._v("能够看到，我们已经成功拉取到了 1.15版本的nginx了")]),a._v(" "),s("h4",{attrs:{id:"查看升级状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看升级状态"}},[a._v("#")]),a._v(" 查看升级状态")]),a._v(" "),s("p",[a._v("下面可以，查看升级状态")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl rollout status deployment web\n")])])]),s("p",[s("img",{attrs:{src:"images/image-20201116112139645.png",alt:"image-20201116112139645"}})]),a._v(" "),s("h4",{attrs:{id:"查看历史版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看历史版本"}},[a._v("#")]),a._v(" 查看历史版本")]),a._v(" "),s("p",[a._v("我们还可以查看历史版本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl rollout "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("history")]),a._v(" deployment web\n")])])]),s("h4",{attrs:{id:"应用回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用回滚"}},[a._v("#")]),a._v(" 应用回滚")]),a._v(" "),s("p",[a._v("我们可以使用下面命令，完成回滚操作，也就是回滚到上一个版本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl rollout undo deployment web\n")])])]),s("p",[a._v("然后我们就可以查看状态")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl rollout status deployment web\n")])])]),s("p",[s("img",{attrs:{src:"images/image-20201116112524601.png",alt:"image-20201116112524601"}})]),a._v(" "),s("p",[a._v("同时我们还可以回滚到指定版本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl rollout undo deployment web --to-revision"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),s("h3",{attrs:{id:"弹性伸缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弹性伸缩"}},[a._v("#")]),a._v(" 弹性伸缩")]),a._v(" "),s("p",[a._v("弹性伸缩，也就是我们通过命令一下创建多个副本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl scale deployment web --replicas"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n")])])]),s("p",[a._v("能够清晰看到，我们一下创建了10个副本")]),a._v(" "),s("p",[s("img",{attrs:{src:"images/image-20201117092841865.png",alt:"image-20201117092841865"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);