(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{442:function(s,a,e){"use strict";e.r(a);var t=e(26),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"kubernetes核心技术ingress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes核心技术ingress"}},[s._v("#")]),s._v(" Kubernetes核心技术Ingress")]),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("原来我们需要将端口号对外暴露，通过 ip + 端口号就可以进行访问")]),s._v(" "),e("p",[s._v("原来是使用Service中的NodePort来实现")]),s._v(" "),e("ul",[e("li",[s._v("在每个节点上都会启动端口")]),s._v(" "),e("li",[s._v("在访问的时候通过任何节点，通过ip + 端口号就能实现访问")])]),s._v(" "),e("p",[s._v("但是NodePort还存在一些缺陷")]),s._v(" "),e("ul",[e("li",[s._v("因为端口不能重复，所以每个端口只能使用一次，一个端口对应一个应用")]),s._v(" "),e("li",[s._v("实际访问中都是用域名，根据不同域名跳转到不同端口服务中")])]),s._v(" "),e("h2",{attrs:{id:"ingress和pod关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress和pod关系"}},[s._v("#")]),s._v(" Ingress和Pod关系")]),s._v(" "),e("p",[s._v("pod 和 ingress 是通过service进行关联的，而ingress作为统一入口，由service关联一组pod中")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118102637839.png",alt:"image-20201118102637839"}})]),s._v(" "),e("ul",[e("li",[s._v("首先service就是关联我们的pod")]),s._v(" "),e("li",[s._v("然后ingress作为入口，首先需要到service，然后发现一组pod")]),s._v(" "),e("li",[s._v("发现pod后，就可以做负载均衡等操作")])]),s._v(" "),e("h2",{attrs:{id:"ingress工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress工作流程"}},[s._v("#")]),s._v(" Ingress工作流程")]),s._v(" "),e("p",[s._v("在实际的访问中，我们都是需要维护很多域名， a.com  和  b.com")]),s._v(" "),e("p",[s._v("然后不同的域名对应的不同的Service，然后service管理不同的pod")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118102858617.png",alt:"image-20201118102858617"}})]),s._v(" "),e("p",[s._v("需要注意，ingress不是内置的组件，需要我们单独的安装")]),s._v(" "),e("h2",{attrs:{id:"使用ingress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用ingress"}},[s._v("#")]),s._v(" 使用Ingress")]),s._v(" "),e("p",[s._v("步骤如下所示")]),s._v(" "),e("ul",[e("li",[s._v("部署ingress Controller【需要下载官方的】")]),s._v(" "),e("li",[s._v("创建ingress规则【对哪个Pod、名称空间配置规则】")])]),s._v(" "),e("h3",{attrs:{id:"创建nginx-pod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建nginx-pod"}},[s._v("#")]),s._v(" 创建Nginx Pod")]),s._v(" "),e("p",[s._v("创建一个nginx应用，然后对外暴露端口")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建pod")]),s._v("\nkubectl create deployment web --image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看")]),s._v("\nkubectl get pods\n")])])]),e("p",[s._v("对外暴露端口")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl expose deployment web --port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --target-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --type:NodePort\n")])])]),e("h3",{attrs:{id:"部署-ingress-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署-ingress-controller"}},[s._v("#")]),s._v(" 部署 ingress controller")]),s._v(" "),e("p",[s._v("下面我们来通过yaml的方式，部署我们的ingress，配置文件如下所示")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118105427248.png",alt:"image-20201118105427248"}})]),s._v(" "),e("p",[s._v("这个文件里面，需要注意的是 hostNetwork: true，改成ture是为了让后面访问到")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl apply -f ingress-con.yaml\n")])])]),e("p",[s._v("通过这种方式，其实我们在外面就能访问，这里还需要在外面添加一层")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl apply -f ingress-con.yaml\n")])])]),e("p",[e("img",{attrs:{src:"images/image-20201118111256631.png",alt:"image-20201118111256631"}})]),s._v(" "),e("p",[s._v("最后通过下面命令，查看是否成功部署 ingress")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl get pods -n ingress-nginx\n")])])]),e("p",[e("img",{attrs:{src:"images/image-20201118111424735.png",alt:"image-20201118111424735"}})]),s._v(" "),e("h3",{attrs:{id:"创建ingress规则文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建ingress规则文件"}},[s._v("#")]),s._v(" 创建ingress规则文件")]),s._v(" "),e("p",[s._v("创建ingress规则文件，ingress-h.yaml")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118111700534.png",alt:"image-20201118111700534"}})]),s._v(" "),e("h3",{attrs:{id:"添加域名访问规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加域名访问规则"}},[s._v("#")]),s._v(" 添加域名访问规则")]),s._v(" "),e("p",[s._v("在windows 的 hosts文件，添加域名访问规则【因为我们没有域名解析，所以只能这样做】")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118112029820.png",alt:"image-20201118112029820"}})]),s._v(" "),e("p",[s._v("最后通过域名就能访问")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/image-20201118112212519.png",alt:"image-20201118112212519"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);