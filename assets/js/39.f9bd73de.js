(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{445:function(a,s,t){"use strict";t.r(s);var e=t(26),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes持久化存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes持久化存储"}},[a._v("#")]),a._v(" Kubernetes持久化存储")]),a._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("之前我们有提到数据卷："),t("code",[a._v("emptydir")]),a._v(" ，是本地存储，pod重启，数据就不存在了，需要对数据持久化存储")]),a._v(" "),t("p",[a._v("对于数据持久化存储【pod重启，数据还存在】，有两种方式")]),a._v(" "),t("ul",[t("li",[a._v("nfs：网络存储【通过一台服务器来存储】")])]),a._v(" "),t("h2",{attrs:{id:"步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[a._v("#")]),a._v(" 步骤")]),a._v(" "),t("h3",{attrs:{id:"持久化服务器上操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久化服务器上操作"}},[a._v("#")]),a._v(" 持久化服务器上操作")]),a._v(" "),t("ul",[t("li",[a._v("找一台新的服务器nfs服务端，安装nfs")]),a._v(" "),t("li",[a._v("设置挂载路径")])]),a._v(" "),t("p",[a._v("使用命令安装nfs")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y nfs-utils\n")])])]),t("p",[a._v("首先创建存放数据的目录")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /data/nfs\n")])])]),t("p",[a._v("设置挂载路径")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打开文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/exports\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加如下内容")]),a._v("\n/data/nfs *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("rw,no_root_squash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("执行完成后，即部署完我们的持久化服务器")]),a._v(" "),t("h3",{attrs:{id:"node节点上操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node节点上操作"}},[a._v("#")]),a._v(" Node节点上操作")]),a._v(" "),t("p",[a._v("然后需要在k8s集群node节点上安装nfs，这里需要在 node1 和 node2节点上安装")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y nfs-utils\n")])])]),t("p",[a._v("执行完成后，会自动帮我们挂载上")]),a._v(" "),t("h3",{attrs:{id:"启动nfs服务端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动nfs服务端"}},[a._v("#")]),a._v(" 启动nfs服务端")]),a._v(" "),t("p",[a._v("下面我们回到nfs服务端，启动我们的nfs服务")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动服务")]),a._v("\nsystemctl start nfs\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者使用以下命令进行启动")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" nfs-server start\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201119082047766.png",alt:"image-20201119082047766"}})]),a._v(" "),t("h3",{attrs:{id:"k8s集群部署应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s集群部署应用"}},[a._v("#")]),a._v(" K8s集群部署应用")]),a._v(" "),t("p",[a._v("最后我们在k8s集群上部署应用，使用nfs持久化存储")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建一个pv文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pv")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pv")]),a._v("\n")])])]),t("p",[a._v("然后创建一个yaml文件  "),t("code",[a._v("nfs-nginx.yaml")])]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119082317625.png",alt:"image-20201119082317625"}})]),a._v(" "),t("p",[a._v("通过这个方式，就挂载到了刚刚我们的nfs数据节点下的 /data/nfs 目录")]),a._v(" "),t("p",[a._v("最后就变成了：  /usr/share/nginx/html    ->  192.168.44.134/data/nfs   内容是对应的")]),a._v(" "),t("p",[a._v("我们通过这个 yaml文件，创建一个pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl apply -f nfs-nginx.yaml\n")])])]),t("p",[a._v("创建完成后，我们也可以查看日志")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl describe pod nginx-dep1\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201119083444454.png",alt:"image-20201119083444454"}})]),a._v(" "),t("p",[a._v("可以看到，我们的pod已经成功创建出来了，同时下图也是出于Running状态")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119083514247.png",alt:"image-20201119083514247"}})]),a._v(" "),t("p",[a._v("下面我们就可以进行测试了，比如现在nfs服务节点上添加数据，然后在看数据是否存在 pod中")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入pod中查看")]),a._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it nginx-dep1 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201119095847548.png",alt:"image-20201119095847548"}})]),a._v(" "),t("h2",{attrs:{id:"pv和pvc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pv和pvc"}},[a._v("#")]),a._v(" PV和PVC")]),a._v(" "),t("p",[a._v("对于上述的方式，我们都知道，我们的ip 和端口是直接放在我们的容器上的，这样管理起来可能不方便")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119082317625.png",alt:"image-20201119082317625"}})]),a._v(" "),t("p",[a._v("所以这里就需要用到 pv  和 pvc的概念了，方便我们配置和管理我们的 ip 地址等元信息")]),a._v(" "),t("p",[a._v("PV：持久化存储，对存储的资源进行抽象，对外提供可以调用的地方【生产者】")]),a._v(" "),t("p",[a._v("PVC：用于调用，不需要关心内部实现细节【消费者】")]),a._v(" "),t("p",[a._v("PV 和 PVC 使得 K8S 集群具备了存储的逻辑抽象能力。使得在配置Pod的逻辑里可以忽略对实际后台存储\n技术的配置，而把这项配置的工作交给PV的配置者，即集群的管理者。存储的PV和PVC的这种关系，跟\n计算的Node和Pod的关系是非常类似的；PV和Node是资源的提供者，根据集群的基础设施变化而变\n化，由K8s集群管理员配置；而PVC和Pod是资源的使用者，根据业务服务的需求变化而变化，由K8s集\n群的使用者即服务的管理员来配置。")]),a._v(" "),t("h3",{attrs:{id:"实现流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现流程"}},[a._v("#")]),a._v(" 实现流程")]),a._v(" "),t("ul",[t("li",[a._v("PVC绑定PV")]),a._v(" "),t("li",[a._v("定义PVC")]),a._v(" "),t("li",[a._v("定义PV【数据卷定义，指定数据存储服务器的ip、路径、容量和匹配模式】")])]),a._v(" "),t("h3",{attrs:{id:"举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),t("p",[a._v("创建一个 pvc.yaml")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119101753419.png",alt:"image-20201119101753419"}})]),a._v(" "),t("p",[a._v("第一部分是定义一个 deployment，做一个部署")]),a._v(" "),t("ul",[t("li",[a._v("副本数：3")]),a._v(" "),t("li",[a._v("挂载路径")]),a._v(" "),t("li",[a._v("调用：是通过pvc的模式")])]),a._v(" "),t("p",[a._v("然后定义pvc")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119101843498.png",alt:"image-20201119101843498"}})]),a._v(" "),t("p",[a._v("然后在创建一个 "),t("code",[a._v("pv.yaml")])]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119101957777.png",alt:"image-20201119101957777"}})]),a._v(" "),t("p",[a._v("然后就可以创建pod了")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl apply -f pv.yaml\n")])])]),t("p",[a._v("然后我们就可以通过下面命令，查看我们的 pv  和 pvc之间的绑定关系")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl get pv, pvc\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201119102332786.png",alt:"image-20201119102332786"}})]),a._v(" "),t("p",[a._v("到这里为止，我们就完成了我们 pv 和 pvc的绑定操作，通过之前的方式，进入pod中查看内容")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubect "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it nginx-dep1 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),t("p",[a._v("然后查看  /usr/share/nginx.html")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201119102448226.png",alt:"image-20201119102448226"}})]),a._v(" "),t("p",[a._v("也同样能看到刚刚的内容，其实这种操作和之前我们的nfs是一样的，只是多了一层pvc绑定pv的操作")])])}),[],!1,null,null,null);s.default=n.exports}}]);