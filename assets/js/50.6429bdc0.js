(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{450:function(a,s,t){"use strict";t.r(s);var e=t(26),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes配置管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes配置管理"}},[a._v("#")]),a._v(" Kubernetes配置管理")]),a._v(" "),t("h2",{attrs:{id:"secret"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#secret"}},[a._v("#")]),a._v(" Secret")]),a._v(" "),t("p",[a._v("Secret的主要作用就是加密数据，然后存在etcd里面，让Pod容器以挂载Volume方式进行访问")]),a._v(" "),t("p",[a._v("场景：用户名 和 密码进行加密")]),a._v(" "),t("p",[a._v("一般场景的是对某个字符串进行base64编码 进行加密")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'admin'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201117212037668.png",alt:"image-20201117212037668"}})]),a._v(" "),t("h3",{attrs:{id:"变量形式挂载到pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量形式挂载到pod"}},[a._v("#")]),a._v(" 变量形式挂载到Pod")]),a._v(" "),t("ul",[t("li",[a._v("创建secret加密数据的yaml文件    secret.yaml")])]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201117212124476.png",alt:"image-20201117212124476"}})]),a._v(" "),t("p",[a._v("然后使用下面命令创建一个pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl create -f secret.yaml\n")])])]),t("p",[a._v("通过get命令查看")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl get pods\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118084010980.png",alt:"image-20201118084010980"}})]),a._v(" "),t("p",[a._v("然后我们通过下面的命令，进入到我们的容器内部")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it mypod "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),t("p",[a._v("然后我们就可以输出我们的值，这就是以变量的形式挂载到我们的容器中")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出用户")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SECRET_USERNAME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出密码")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SECRET_PASSWORD")]),a._v("\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118084137942.png",alt:"image-20201118084137942"}})]),a._v(" "),t("p",[a._v("最后如果我们要删除这个Pod，就可以使用这个命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl delete -f secret-val.yaml\n")])])]),t("h3",{attrs:{id:"数据卷形式挂载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷形式挂载"}},[a._v("#")]),a._v(" 数据卷形式挂载")]),a._v(" "),t("p",[a._v("首先我们创建一个 secret-val.yaml 文件")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201118084321590.png",alt:"image-20201118084321590"}})]),a._v(" "),t("p",[a._v("然后创建我们的 Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 根据配置创建容器")]),a._v("\nkubectl apply -f secret-val.yaml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入容器")]),a._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it mypod "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /etc/foo\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118084707478.png",alt:"image-20201118084707478"}})]),a._v(" "),t("h2",{attrs:{id:"configmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configmap"}},[a._v("#")]),a._v(" ConfigMap")]),a._v(" "),t("p",[a._v("ConfigMap作用是存储不加密的数据到etcd中，让Pod以变量或数据卷Volume挂载到容器中")]),a._v(" "),t("p",[a._v("应用场景：配置文件")]),a._v(" "),t("h3",{attrs:{id:"创建配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建配置文件"}},[a._v("#")]),a._v(" 创建配置文件")]),a._v(" "),t("p",[a._v("首先我们需要创建一个配置文件 "),t("code",[a._v("redis.properties")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("redis.port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1\nredis.port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6379")]),a._v("\nredis.password"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123456")]),a._v("\n")])])]),t("h3",{attrs:{id:"创建configmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建configmap"}},[a._v("#")]),a._v(" 创建ConfigMap")]),a._v(" "),t("p",[a._v("我们使用命令创建configmap")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl create configmap redis-config --from-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("redis.properties\n")])])]),t("p",[a._v("然后查看详细信息")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl describe cm redis-config\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118085503534.png",alt:"image-20201118085503534"}})]),a._v(" "),t("h3",{attrs:{id:"volume数据卷形式挂载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume数据卷形式挂载"}},[a._v("#")]),a._v(" Volume数据卷形式挂载")]),a._v(" "),t("p",[a._v("首先我们需要创建一个 "),t("code",[a._v("cm.yaml")])]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201118085847424.png",alt:"image-20201118085847424"}})]),a._v(" "),t("p",[a._v("然后使用该yaml创建我们的pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建")]),a._v("\nkubectl apply -f cm.yaml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看")]),a._v("\nkubectl get pods\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118090634869.png",alt:"image-20201118090634869"}})]),a._v(" "),t("p",[a._v("最后我们通过命令就可以查看结果输出了")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl logs mypod\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118090712780.png",alt:"image-20201118090712780"}})]),a._v(" "),t("h3",{attrs:{id:"以变量的形式挂载pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以变量的形式挂载pod"}},[a._v("#")]),a._v(" 以变量的形式挂载Pod")]),a._v(" "),t("p",[a._v("首先我们也有一个 myconfig.yaml文件，声明变量信息，然后以configmap创建")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201118090911260.png",alt:"image-20201118090911260"}})]),a._v(" "),t("p",[a._v("然后我们就可以创建我们的配置文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建pod")]),a._v("\nkubectl apply -f myconfig.yaml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 获取")]),a._v("\nkubectl get cm\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118091042287.png",alt:"image-20201118091042287"}})]),a._v(" "),t("p",[a._v("然后我们创建完该pod后，我们就需要在创建一个  config-var.yaml 来使用我们的配置信息")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/image-20201118091249520.png",alt:"image-20201118091249520"}})]),a._v(" "),t("p",[a._v("最后我们查看输出")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl logs mypod\n")])])]),t("p",[t("img",{attrs:{src:"images/image-20201118091448252.png",alt:"image-20201118091448252"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);